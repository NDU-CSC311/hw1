name: GitHub Classroom Workflow

on: [workflow_dispatch,issue_comment]
env: 
      BUILD_TYPE: Release 

jobs:
      build:
        name: Autograding
        runs-on: ubuntu-latest
        if: ${{(github.event.issue.pull_request) && contains(github.event.comment.body,'/eval')}}
        strategy:
              max-parallel: 1
        steps:
          - uses: actions/checkout@v2
         
          - name: Cache boost
            uses: actions/cache@v2
            id: cache-boost
            with:
             path: "~/boost"
             key: libboost1.71-dev
          - name: install boost
            env:
                  CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
                  BOOST_VERSION: ${{secrets.BOOST_VERSION}}
            run: |
                   if [[ "$CACHE_HIT" == 'true' ]]; then
                        sudo cp --verbose --force --recursive ~/boost/* /
                   else
                     mkdir -p ~/boost
                     sudo apt-get install -y libboost1.71-dev
                     sudo dpkg -L libboost1.71-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
                   fi
          - name: build
            run: sh build.sh
          
          - name: testAll
            run: |
                  sh testAll.sh
          - name: Annotation
            run: |
                  text=$(sh status.sh)
                  echo "::notice title=Autograding complete ::$text"
            env:
                 GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          - name: Report total in PR
            run: |
                  text=$(sh status.sh)
                  gh pr comment ${{github.event.issue_number}} -b "$text "
            env:
                 GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          - uses: actions/upload-artifact@v2
            if: ${{always()}}
            with:
                  name: report
                  path: report.md
                  
          - name: commit-remote
            if: ${{ always() }}
            env:
                  token: ${{secrets.workflow_token}}
            uses: stefanzweifel/git-auto-commit-action@v4
            with:
                file_pattern: '*.md' 
                repository: "${{github.workspace}}"
                commit_message: "Generate Report"
          
         
